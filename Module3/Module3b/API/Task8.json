{
	"info": {
		"_postman_id": "e34cdc0f-ef5c-42c1-8596-a39bfd59b6a4",
		"name": "Testify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19435219"
	},
	"item": [
		{
			"name": "Get all books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=pm.response.json();\r",
							"\r",
							"pm.test(\"Test for id\",function(){\r",
							"pm.expect(jsonData[4].id).to.eql(5);\r",
							"});\r",
							"\r",
							"pm.test(\"Test for name\",function(){\r",
							"pm.expect(jsonData[4].name).to.eql(\"Untamed\");\r",
							"});\r",
							"pm.test(\"Test for type\",function(){\r",
							"pm.expect(jsonData[4].type).to.eql(\"non-fiction\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200 for GET request\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('place_orders')"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "1823359cec89e55eaff975a3a7387c2fccee2defde767ceb211ea298889c3ef3",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/books",
					"host": [
						"{{base}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Removed redundant tests\r",
							"var jsonData=pm.response.json();\r",
							"\r",
							"pm.test(\"Test for id\",function(){\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Test for name\",function(){\r",
							"    pm.expect(jsonData.name).to.eql(\"The Russian\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200 for GET request\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"postman.setNextRequest('Single book')"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "1823359cec89e55eaff975a3a7387c2fccee2defde767ceb211ea298889c3ef3",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/books/:bookId",
					"host": [
						"{{base}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Removed redundant tests\r",
							"var jsonData=pm.response.json();\r",
							"\r",
							"pm.test(\"Test for id\",function(){\r",
							"    pm.expect(jsonData.bookId).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Test for name\",function(){\r",
							"    pm.expect(jsonData.customerName).to.eql(\"John\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200 for GET request\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"postman.setNextRequest(null)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "1823359cec89e55eaff975a3a7387c2fccee2defde767ceb211ea298889c3ef3",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/orders/:orderId",
					"host": [
						"{{base}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "7XZTKY1EykA02cxE9xA5_"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 201 for POST request\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"postman.setNextRequest('Get Order')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "1823359cec89e55eaff975a3a7387c2fccee2defde767ceb211ea298889c3ef3",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"customerName\": \"John\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/orders/-t-TEPj8jaKfSwAgCj5Sa",
					"host": [
						"{{base}}"
					],
					"path": [
						"orders",
						"-t-TEPj8jaKfSwAgCj5Sa"
					]
				}
			},
			"response": []
		},
		{
			"name": "place_orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 201 for POST request\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "1823359cec89e55eaff975a3a7387c2fccee2defde767ceb211ea298889c3ef3",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": {{id}},\r\n  \"customerName\": \"John\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"Adedejior@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base}}/api-clients/",
					"host": [
						"{{base}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": "The Russian",
			"type": "string"
		}
	]
}