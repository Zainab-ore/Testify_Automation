{
	"info": {
		"_postman_id": "4c4efbd5-309d-4799-a86f-b84a0e43be6d",
		"name": "Sendinblue",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19435219"
	},
	"item": [
		{
			"name": "Sales CRM",
			"item": [
				{
					"name": "Companies",
					"item": [
						{
							"name": "Get all Companies",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies?filters=1&linkedContactsIds=1&linkedDealsIds=1&page=1&limit=55&sort=desc&sortBy=1&x-api-key=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",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									],
									"query": [
										{
											"key": "filters",
											"value": "1",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as {\"attributes.owner\":\"6299dcf3874a14eacbc65c46\"}"
										},
										{
											"key": "linkedContactsIds",
											"value": "1",
											"description": "Filter by linked contacts ids"
										},
										{
											"key": "linkedDealsIds",
											"value": "1",
											"description": "Filter by linked Deals ids"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "55",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										},
										{
											"key": "sortBy",
											"value": "1",
											"description": "The field used to sort field names."
										},
										{
											"key": "x-api-key",
											"value": "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"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns companies list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"This test is to verify that the response has all the  field \", function () {\r",
											"  const myData = pm.response.json();\r",
											"\r",
											"  pm.expect(myData).to.be.an('object');\r",
											"  pm.expect(myData.id).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id should not be an empty string\", function () {\r",
											"  const myData = pm.response.json();\r",
											"  \r",
											"  pm.expect(myData).to.be.an('object');\r",
											"  pm.expect(myData.id).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"The value should not be null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"This test is to verify that the the response time should be less than 1000ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"This test is to verify that the Response body is in JSON format\", function () {\r",
											"    pm.response.to.have.jsonBody();\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"name\": \"JUMIA\",\n    \"owner\": \"655b6f7e82e7dd1e783f7a12\",\n    \"domain\": \"www.jumia.com\",\n    \"industry\": \"retail\",\n    \"phone_number\": \"8139341004\"\n  },\n  \"linkedContactsIds\": [\n    9\n  ],\n  \"linkedDealsIds\": [\n    \"6564454a4c0645730170d901\"\n  ],\n  \"countryCode\": 234\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									]
								}
							},
							"response": [
								{
									"name": "Created new Company",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get company attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'internalName' field is a non-empty string\", function () {\r",
											"    const myData = pm.response.json();\r",
											"\r",
											"    pm.expect(myData).to.be.an('array');\r",
											"    myData.forEach(function (item) {\r",
											"        pm.expect(item.internalName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the attributeTypeName field is a non-empty string\", function () {\r",
											"    const myData = pm.response.json();\r",
											"\r",
											"    pm.expect(myData).to.be.an('array');\r",
											"    myData.forEach(function (item) {\r",
											"        pm.expect(item.attributeTypeName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'required' field is a boolean value\", function () {\r",
											"    const myData = pm.response.json();\r",
											"\r",
											"    pm.expect(myData).to.be.an('array');\r",
											"    myData.forEach(function (data) {\r",
											"        pm.expect(data.required).to.be.a('boolean');\r",
											"    });\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"attributes"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of company attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Link and Unlink company with contact and deal",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully linked/unlinked contacts/deals with the company.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"This test is to verify that the Id is a not an empty string\", function () {\r",
											"    const myData = pm.response.json();\r",
											"\r",
											"    pm.expect(myData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\" This test is to verify that the attributes exist and includes all keys\", function () {\r",
											"    const myData = pm.response.json();\r",
											"\r",
											"    pm.expect(myData.attributes).to.be.an('object');\r",
											"    pm.expect(myData.attributes).to.include.all.keys('created_at', 'domain', 'industry', 'last_updated_at', 'name', 'number_of_contacts', 'owner', 'owner_assign_date', 'phone_number');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"LinkedContactsIds array is present and contains expected number of elements\", function () {\r",
											"    const myData = pm.response.json();\r",
											"    \r",
											"    pm.expect(myData).to.be.an('object');\r",
											"    pm.expect(myData.linkedContactsIds).to.exist;\r",
											"    pm.expect(myData.linkedContactsIds).to.be.an('array');\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"LinkedContactsIds array is present and contains expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.linkedContactsIds).to.exist;\r",
											"    pm.expect(responseData.linkedContactsIds).to.be.an('array');\r",
											"    \r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"LinkedDealsIds array is present and contains expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											" \r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "655fb17bab1b1e06aef6ca05",
											"description": "(Required) Get Company Details"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Company",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a company",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) Company ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "When company deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"This test is to verify that the company is updated\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"allSelected\": false,\n    \"items\": [\n        \"655fb2c4638e3c2e6009f388\"\n    ],\n    \"attributes\": {\n        \"domain\": \"www.kongas.com\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "655fd0634d83740dfe4308eb",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Company updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when company id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get pipeline stages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Pipeline and pipeline_name fields are present\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.pipeline).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.pipeline_name).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Stages array is present and contains the expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.stages).to.exist.and.to.be.an('array');\r",
											"    pm.expect(responseData.stages).to.have.lengthOf(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each stage's id is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.stages).to.be.an('array').that.is.not.empty;\r",
											"\r",
											"    responseData.stages.forEach(function(stage) {\r",
											"        pm.expect(stage.id).to.match(/[0-9a-fA-F-]{36}/);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/pipeline/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"pipeline",
										"details"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of pipeline stages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/pipeline/details",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"pipeline",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"stages\": [\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    },\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Deals",
					"item": [
						{
							"name": "Get all deals",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									],
									"query": [
										{
											"key": "filter[attributes]",
											"value": "veniam elit in",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as `attributes.owner`.\""
										},
										{
											"key": "filter[linkedCompaniesIds]",
											"value": "veniam elit in",
											"description": "Filter by linked companies ids"
										},
										{
											"key": "filter[linkedContactsIds]",
											"value": "veniam elit in",
											"description": "Filter by linked companies ids"
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page"
										},
										{
											"key": "limit",
											"value": "13396752",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns deals list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has the 'id' field\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.have.property('id');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'id' field is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The id field is in the correct format\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.id).to.match(/^[a-fA-F0-9]{24}$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attributes\": {\n        \"deal_name\": \"WATCH - Oreoluwa Hammed\",\n        \"deal_owner\": \"655b6f7e82e7dd1e783f7a12\",\n        \"pipeline\": \"655fb0f888f7fca2cd5f4246\",\n        \"deal_stage\": \"f9ec89d6-5a26-4502-bb1c-e25e9df73587\",\n        \"amount\": 900,\n        \"close_date\": \"2023-12-01T23:00:00.000Z\"\n    },\n    \"linkedCompaniesIds\": [\n        \"655fd0634d83740dfe4308eb\",\n        \"655fcffa875eb1e35cb0649c\",\n        \"655fcf92c70088a3d04c270f\",\n        \"655fb7b3638e3c2e6009f39c\",\n        \"655fb17bab1b1e06aef6ca05\"\n    ],\n    \"linkedContactsIds\": [\n        1\n    ],\n    \"followUpTask\": {\n        \"taskName\": \"To do\",\n        \"taskTypeId\": \"655b6f93acd26807eb763a23\",\n        \"startAt\": \"2023-11-30T00:00:00+01:00\"\n    },\n    \"gtm\": {\n        \"deal\": {\n            \"event\": \"analyticsEvent\",\n            \"eventCategory\": \"CrmActivity\",\n            \"eventAction\": \"DealAction\",\n            \"eventLabel\": \"Created\",\n            \"eventValue\": 900,\n            \"source\": \"/deals/kanban\",\n            \"defaultPipelineUsed\": true\n        },\n        \"task\": {\n            \"event\": \"analyticsEvent\",\n            \"eventCategory\": \"CrmActivity\",\n            \"eventAction\": \"Task creation\",\n            \"eventLabel\": \"Todo\",\n            \"source\": \"dealForm\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									]
								}
							},
							"response": [
								{
									"name": "Created new Deal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Link and Unlink a deal with contacts and companies",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attributes\": {\n        \"deal_name\": \"WATCH - Oreoluwa Hammed\",\n        \"deal_owner\": \"655b6f7e82e7dd1e783f7a12\",\n        \"pipeline\": \"655fb0f888f7fca2cd5f4246\",\n        \"deal_stage\": \"f9ec89d6-5a26-4502-bb1c-e25e9df73587\",\n        \"amount\": 900,\n        \"close_date\": \"2023-12-01T23:00:00.000Z\"\n    },\n    \"linkedCompaniesIds\": [\n        \"655fd0634d83740dfe4308eb\",\n        \"655fcffa875eb1e35cb0649c\",\n        \"655fcf92c70088a3d04c270f\",\n        \"655fb7b3638e3c2e6009f39c\",\n        \"655fb17bab1b1e06aef6ca05\"\n    ],\n    \"linkedContactsIds\": [\n        1\n    ],\n    \"followUpTask\": {\n        \"taskName\": \"To do\",\n        \"taskTypeId\": \"655b6f93acd26807eb763a23\",\n        \"startAt\": \"2023-11-30T00:00:00+01:00\"\n    },\n    \"gtm\": {\n        \"deal\": {\n            \"event\": \"analyticsEvent\",\n            \"eventCategory\": \"CrmActivity\",\n            \"eventAction\": \"DealAction\",\n            \"eventLabel\": \"Created\",\n            \"eventValue\": 900,\n            \"source\": \"/deals/kanban\",\n            \"defaultPipelineUsed\": true\n        },\n        \"task\": {\n            \"event\": \"analyticsEvent\",\n            \"eventCategory\": \"CrmActivity\",\n            \"eventAction\": \"Task creation\",\n            \"eventLabel\": \"Todo\",\n            \"source\": \"dealForm\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "655fd4d0e122b6bf37823e71",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully linked/unlinked contacts/companies with the deal.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get deal attributes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/attributes/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"attributes",
										"deals"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of deal attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/attributes/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"attributes",
												"deals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Get a deal",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the deal by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"deal_name\": \"testname\",\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12,\n    \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n    \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n    \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n    \"created_at\": \"2022-05-30T07:42:05.671Z\",\n    \"number_of_contacts\": 1,\n    \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n    \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n    \"next_activity_date\": null,\n    \"number_of_activities\": 0\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedCompaniesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a deal",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a deal",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit in",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Deal updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Tasks",
					"item": [
						{
							"name": "Get all tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the format of the 'createdAt' field in each item\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.items).to.be.an('array');\r",
											"\r",
											"    responseData.items.forEach(function (item) {\r",
											"        pm.expect(item.createdAt).to.be.a('string').and.to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/, \"Invalid 'createdAt' format\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the presence of the 'pager' object and its properties\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData.pager).to.exist;\r",
											"  pm.expect(responseData.pager).to.be.an('object');\r",
											"  pm.expect(responseData.pager).to.have.all.keys('current', 'limit', 'from', 'to', 'count', 'total', 'max', 'totalStoredResults');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks?limit=50&sort=desc&sortBy=name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "",
											"description": "Filter by task type (ID)",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "done",
											"description": "Filter by task status",
											"disabled": true
										},
										{
											"key": "filter[date]",
											"value": "range",
											"description": "Filter by date",
											"disabled": true
										},
										{
											"key": "filter[assignTo]",
											"value": "veniam elit in",
											"description": "Filter by assignTo id",
											"disabled": true
										},
										{
											"key": "filter[contacts]",
											"value": "veniam elit in",
											"description": "Filter by contact ids",
											"disabled": true
										},
										{
											"key": "filter[deals]",
											"value": "veniam elit in",
											"description": "Filter by deals ids",
											"disabled": true
										},
										{
											"key": "filter[companies]",
											"value": "veniam elit in",
											"description": "Filter by companies ids",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "-41398727",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "-41398727",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										},
										{
											"key": "sortBy",
											"value": "name",
											"description": "The field used to sort field names."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns task list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields - id and priority\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.exist.and.to.be.a('string');\r",
											"  pm.expect(responseData.priority).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ID is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  pm.expect(responseData.id).to.be.a('string').and.not.to.be.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Priority is a boolean value\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.priority).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is in an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Send an email\",\n    \"taskTypeId\": \"655b6f93acd26807eb763a21\",\n    \"done\": false,\n    \"reminder\": null,\n    \"priority\": true,\n    \"notes\": \"send email as task\",\n    \"date\": \"2023-12-09T17:00:00+01:00\",\n    \"duration\": 0,\n    \"assignToId\": \"655b6f7e82e7dd1e783f7a12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									]
								}
							},
							"response": [
								{
									"name": "Created new task",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all task types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the response schema for each task type object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    \r",
											"    responseData.forEach(function(taskType) {\r",
											"        pm.expect(taskType).to.be.an('object');\r",
											"        pm.expect(taskType.id).to.be.a('string');\r",
											"        pm.expect(taskType.title).to.be.a('string');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each task type object has a non-empty 'id' field\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    \r",
											"    responseData.forEach(function(taskType) {\r",
											"        pm.expect(taskType.id).to.exist.and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each task type object has a non-empty 'title' field\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
											"    \r",
											"    responseData.forEach(function(taskType) {\r",
											"        pm.expect(taskType.title).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Title should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each task type object's 'id' field is a valid ObjectId format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(taskType){\r",
											"        pm.expect(taskType.id).to.match(/^[0-9a-fA-F]{24}$/);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasktypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasktypes"
									]
								}
							},
							"response": [
								{
									"name": "Returns all the Task types",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasktypes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasktypes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a88a2eb7a574180261234\",\n  \"title\": \"Email\"\n}"
								}
							]
						},
						{
							"name": "Get a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Task ID is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Task type ID is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.taskTypeId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Task type ID should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Name is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "65636d4d8e0c893e6f0e2cb5",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Task by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"name\": \"Task: Connect with client\",\n  \"id\": \"61a5cd07ca1347c82306ad06\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a task",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "655b6f93acd26807eb763a26",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a task",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"655b6f7e82e7dd1e783f7a12\",\n  \"date\": \"2023-11-29T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": true,\n  \"assignToId\": \"655b6f7e82e7dd1e783f7a12\",\n  \n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"minutes\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "655b6f93acd26807eb763a22",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Task updated succussfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Notes",
					"item": [
						{
							"name": "Get all notes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=100&limit=50&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by note entity type"
										},
										{
											"key": "entityIds",
											"value": "100",
											"description": "Filter by note entity IDs"
										},
										{
											"key": "dateFrom",
											"value": "-41398727",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "-41398727",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns notes list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id field is not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Text field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.text).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Text field should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CompanyIds array is present and not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.companyIds).to.be.an('array').and.to.have.lengthOf.at.least(1, \"CompanyIds array should not be empty\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"<p>IMPORTANT</p>\\n\",\n  \"companyIds\": [\n    \"656741894bb550d46ee0ea2e\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									]
								}
							},
							"response": [
								{
									"name": "Created new note",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad09\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"name": "Format is not supported",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Get a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Text field must be a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.text).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Text field should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ContactIds array is present and contains expected number of elements\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.contactIds).to.be.an('array');\r",
											"    pm.expect(responseData.contactIds.length).to.equal(3);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Author object contains required fields - email, timezone, and name\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.author).to.exist;\r",
											"    pm.expect(responseData.author.email).to.be.a('string');\r",
											"    pm.expect(responseData.author.timezone).to.be.a('string');\r",
											"    pm.expect(responseData.author.name).to.be.an('object');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CreatedAt field is in a valid date format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.createdAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "655fb17bab1b1e06aef6ca05",
											"description": "(Required) Note ID to get"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Note by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"id\": \"61a5cd07ca1347c82306ad09\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"authorId\": {\n    \"email\": \"johndoe@example.com\",\n    \"locale\": \"en_GB\",\n    \"timezone\": \"Asia/Kolkata\",\n    \"name\": {\n      \"fullName\": \"John Doe\"\n    }\n  },\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n  \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Id field should not be empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Text field is not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.text).to.exist.and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CompanyIds array should be present and not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.companyIds).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1, \"CompanyIds array should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"DealIds array should be present and empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.dealIds).to.exist.and.to.be.an('array').that.is.empty;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"<p> *IMPORTANT INFORMATION* </p>\\n\",\n  \"companyIds\": [\n    \"656741894bb550d46ee0ea2e\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "65683865e9b135555c0ced09",
											"description": "(Required) Note ID to update"
										}
									]
								}
							},
							"response": [
								{
									"name": "Note updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								},
								{
									"name": "Format is not supported",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Delete a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Deleted\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6568474a4f91417d3133ee9d",
											"description": "(Required) Note ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Get all files",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files?entity=deals&limit=50&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by file entity type"
										},
										{
											"key": "entityIds",
											"value": "veniam elit in",
											"description": "Filter by file entity IDs",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "-41398727",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "-41398727",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns files list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Upload a file",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File data to create a file.",
											"type": "file",
											"src": []
										},
										{
											"key": "dealId",
											"value": "proident",
											"type": "text"
										},
										{
											"key": "contactId",
											"value": "27165486",
											"type": "text"
										},
										{
											"key": "companyId",
											"value": "nisi aliquip",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/crm/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									]
								}
							},
							"response": [
								{
									"name": "Returns the created File with additional details",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/crm/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/crm/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid deals ids format.\"\n}"
								}
							]
						},
						{
							"name": "Download a file",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit in",
											"description": "(Required) File id to download."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns downloadable file link. Valid for next 5 minutes only.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fileUrl\": \"https://storage.googleapis.com/sendinblue-app-crm.......-sample.pdf\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a file",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit in",
											"description": "(Required) File id to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when file is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get file details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id",
										"data"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "(Required) File id to get file data."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when file is found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Marketing",
			"item": [
				{
					"name": "Email Campaigns",
					"item": [
						{
							"name": "Get an email campaign report",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Sender object must exist and be an object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.sender).to.be.an('object');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Recipients object contains expected lists and exclusion lists\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.recipients).to.be.an('object');\r",
											"    pm.expect(responseData.recipients.lists).to.be.an('array');\r",
											"    pm.expect(responseData.recipients.exclusionLists).to.be.an('array');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Statistics object contains expected global and campaign stats\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.statistics).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.statistics.globalStats).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.statistics.campaignStats).to.exist.and.to.be.an('array');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "9",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 22,\n  \"name\": \"Weekly - 1\",\n  \"subject\": \"Week 1 - Newsletter\",\n  \"type\": \"classic\",\n  \"status\": \"draft\",\n  \"scheduledAt\": \"2017-09-22T12:30:00.000Z\",\n  \"testSent\": false,\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"sender\": {\n    \"email\": \"newsletter@mycompany.com\",\n    \"name\": \"Newsletter\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"htmlContent\": \"This is my HTML Content\",\n  \"shareLink\": \"http://dhh.sendinblue.com/fhsgccc.html?t=9865448900\",\n  \"tag\": \"Newsletter\",\n  \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"recipients\": {\n    \"lists\": [\n      22\n    ],\n    \"exclusionLists\": [\n      45\n    ]\n  },\n  \"statistics\": {\n    \"globalStats\": {\n      \"uniqueClicks\": 2300,\n      \"clickers\": 2665,\n      \"complaints\": 1,\n      \"delivered\": 19765,\n      \"sent\": 19887,\n      \"softBounces\": 100,\n      \"hardBounces\": 87,\n      \"uniqueViews\": 7779,\n      \"trackableViews\": 5661,\n      \"trackableViewsRate\": 23.45,\n      \"estimatedViews\": 560,\n      \"unsubscriptions\": 2,\n      \"viewed\": 8999\n    },\n    \"campaignStats\": [\n      {\n        \"listId\": 22,\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"trackableViews\": 5661,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    ],\n    \"mirrorClick\": 120,\n    \"remaining\": 1000,\n    \"linksStats\": {\n      \"http://myUrl1.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl2.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl3.domain.com\": {\n        \"nbClick\": 80\n      }\n    },\n    \"statsByDomain\": {\n      \"gmail\": {\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    },\n    \"statsByDevice\": {\n      \"desktop\": {\n        \"mac\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 1\n        }\n      },\n      \"mobile\": {\n        \"androidMobile\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 1,\n          \"uniqueViews\": 0\n        },\n        \"iPhone\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 0\n        }\n      }\n    },\n    \"statsByBrowser\": {\n      \"thunderbird\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"safari\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"internetExplorer\": {\n        \"clickers\": 0,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      }\n    }\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email campaign",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"ipsum\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"tempor__\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "9",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"deleted\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "9",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign immediately, based on campaignId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Sent immediately\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "7",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign to your test list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailTo\": [\n    \"osleekangel@yahoo.com\",\n    \"zicosmetics.ng@gmail.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "9",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"75BfS6kLq8tM@SJimzZAEpYHRyLStQjY.gxs\",\n    \"5raZtMVhzx@gMjdaabGzAjkYrK.fnco\"\n  ],\n  \"withoutListEmails\": [\n    \"3j0Dt@VghDwawjVvNTjFVmRKWJ.agyu\",\n    \"UaS0Xey-oMdkd@vZKiBhSUbOueTWIJZpFdJmnF.ug\"\n  ],\n  \"blackListedEmails\": [\n    \"jooW@GLWhkVFSczNd.qgrn\",\n    \"K0YvNXk7f@tETerPDdjJVYYwNPbKs.pur\"\n  ]\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an email campaign status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "11",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send the report of a campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"GOOD Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"hammedzainny@gmail.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "8",
											"description": "(Required) Id of the campaign"
										}
									]
								},
								"description": "A PDF will be sent to the specified email addresses"
							},
							"response": [
								{
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an A/B test email campaign results",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"abTestCampaignResult"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "11",
											"description": "(Required) Id of the A/B test campaign"
										}
									]
								},
								"description": "Obtain winning version of an A/B test email campaign"
							},
							"response": [
								{
									"name": "A/B test email campaign Result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"winningVersion\": \"B\",\n  \"winningCriteria\": \"Click\",\n  \"openRate\": \"100%\",\n  \"clickRate\": \"50%\",\n  \"winningVersionRate\": \"0%\",\n  \"statistics\": {\n    \"openers\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"100%\"\n    },\n    \"clicks\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"50%\"\n    },\n    \"unsubscribed\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"0%\"\n    },\n    \"softBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"hardBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"complaints\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    }\n  },\n  \"clickedLinks\": {\n    \"Version A\": [\n      {\n        \"link\": \"https://google.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      },\n      {\n        \"link\": \"https://youtube.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      }\n    ],\n    \"Version B\": [\n      {\n        \"link\": \"http://www.github.com\",\n        \"clicksCount\": 2,\n        \"clickRate\": \"40%\"\n      },\n      {\n        \"link\": \"http://www.stackoverflow.com\",\n        \"clicksCount\": 3,\n        \"clickRate\": \"60%\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "A/B test Email Campaign not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a shared template url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"SharedUrl is not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.sharedUrl).to.exist.and.to.have.lengthOf.at.least(1, \"SharedUrl should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"SharedUrl is a valid URL format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.sharedUrl).to.match(/^https?:\\/\\/[\\w\\-]+(\\.[\\w\\-]+)+[/#?]?.*$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sharedUrl"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "8",
											"description": "(Required) Id of the campaign or template"
										}
									]
								},
								"description": "Get a unique URL to share & import an email template from one Sendinblue account to another."
							},
							"response": [
								{
									"name": "Shared template URL information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"sharedUrl\": \"https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign/Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Only email campaigns or templates are allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export the recipients of an email campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "8",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return all your created email campaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response is an object with count property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('count');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with campaigns property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('campaigns');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									],
									"query": [
										{
											"key": "type",
											"value": "classic",
											"description": "Filter on the type of the campaigns"
										},
										{
											"key": "status",
											"value": "archive",
											"description": "Filter on the status of the campaign"
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 2,\n  \"campaigns\": [\n    {\n      \"id\": 12,\n      \"name\": \"EN - Sales Summer 2017\",\n      \"subject\": \"20% OFF for 2017 Summer Sales\",\n      \"type\": \"classic\",\n      \"status\": \"sent\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"marketing@mycompany.com\",\n        \"name\": \"Marketing\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          5\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 5,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": 80\n        },\n        \"statsByDomain\": {\n          \"yahoo.com\": {\n            \"uniqueClicks\": 298,\n            \"clickers\": 533,\n            \"complaints\": 0,\n            \"sent\": 25601,\n            \"softBounces\": 5,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 3527,\n            \"unsubscriptions\": 17,\n            \"viewed\": 5255,\n            \"delivered\": 25596\n          },\n          \"hotmail.co.uk\": {\n            \"uniqueClicks\": 1970,\n            \"clickers\": 2720,\n            \"complaints\": 5,\n            \"sent\": 117055,\n            \"softBounces\": 111,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 21111,\n            \"unsubscriptions\": 105,\n            \"viewed\": 35251,\n            \"delivered\": 117056\n          }\n        }\n      }\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Weekly - 1\",\n      \"subject\": \"Week 1 - Newsletter\",\n      \"type\": \"Classic\",\n      \"status\": \"draft\",\n      \"scheduledAt\": \"\",\n      \"testSent\": false,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"newsletter@mycompany.com\",\n        \"name\": \"Newsletter\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          10\n        ],\n        \"exclusionLists\": [\n          45\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 10,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl2.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl3.domain.com\": {\n            \"nbClick\": 80\n          }\n        },\n        \"statsByDomain\": {\n          \"gmail\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          },\n          \"aol\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create an email campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"adedejior@gmail.com\",\n    \"id\": 55\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": 71900287,\n  \"scheduledAt\": \"Excepteur molli\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"Adedejior@gmail.com\",\n  \"toField\": \"ORE HAMMED\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"veniam_8\": {},\n    \"nullac\": {},\n    \"cillum3c\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Upload an image to your account's image gallery",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										"images"
									]
								}
							},
							"response": [
								{
									"name": "Image has been successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												"images"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://img.mailinblue.com/100000/images/rnb/original/62casdase8wewq9df1c2f27c.jpeg\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												"images"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SMS Campaigns",
					"item": [
						{
							"name": "Returns the information for all your created SMS campaigns",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									],
									"query": [
										{
											"key": "status",
											"value": "archive",
											"description": "Status of campaign."
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n"
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number limitation for the result returned"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"campaigns\": [\n    {\n      \"id\": 2,\n      \"name\": \"PROMO CODE\",\n      \"status\": \"sent\",\n      \"content\": \"Visit our Store and get some discount !\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    },\n    {\n      \"id\": 10,\n      \"name\": \"SUMMER SALE\",\n      \"status\": \"draft\",\n      \"content\": \"Summer Sale is starting tomorrow. Get extra 10% with this code:SUM17\",\n      \"scheduledAt\": \"2017-08-04T12:30:00.000Z\",\n      \"testSent\": false,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    }\n  ],\n  \"count\": 12\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Creates an SMS campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"sed\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an SMS campaign",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 2,\n  \"name\": \"PROMO CODE\",\n  \"status\": \"sent\",\n  \"content\": \"Visit our Store and get some discount !\",\n  \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n  \"testSent\": true,\n  \"sender\": \"MyCompany\",\n  \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"recipients\": {\n    \"lists\": [\n      21\n    ],\n    \"exclusionLists\": [\n      13\n    ]\n  },\n  \"statistics\": {\n    \"delivered\": 2987,\n    \"sent\": 3000,\n    \"processing\": 0,\n    \"softBounces\": 3,\n    \"hardBounces\": 1,\n    \"unsubscriptions\": 3,\n    \"answered\": 2\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an SMS campaign",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"irure deserunt mollit dolore\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMS campaign",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send your SMS campaign immediately",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "SMS Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a campaign's status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a test SMS campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phoneNumber\": \"+2348075493175\",\n  \n  \"tl_phone\": \"+2348075493175\",\n  \"msg\": \"OPay gives you the freedom to get more. Our solutions make payments easier, transfers free, savings more rewarding and gives you cashback on airtime and\",\n  \"from\": \"OPAY\",\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvbXkuYnJldm8uY29tXC9jYW1wXC9zZW5kdGVzdHNtcyIsImF1ZCI6Imh0dHBzOlwvXC9teS5icmV2by5jb21cLyIsInN1YiI6IjY3OTczMDgiLCJpYXQiOjAsImp0aSI6IiIsInJrZXkiOiJtdVVFbW1DQlVsIn0.qWWP0rjqQD4Kq1NWgq_vRA9rAMY91CDKCt2f0-QL15Q\",\n  \"encryption\": \"gsm\",\n  \"media_url\": false\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "1",
											"description": "(Required) Id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test SMS could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The SMS could not be sent to all recipients\",\n  \"unexistingSms\": [\n    \"uONf@iAiaZmhYWwGaKp.rtix\",\n    \"FYIHDS@aUQgXmyvqTgUDBWeTXsc.dh\"\n  ],\n  \"withoutListSms\": [\n    \"qRZAMI0KoD5@mIhThccLqX.qjn\",\n    \"CrFkHJl6Pz9bj@CkukdVNyAwyMdcvHBYDZ.vwf\"\n  ]\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export an SMS campaign's recipients",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an SMS campaign's report",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								},
								"description": "Send report of Sent and Archived campaign, to the specified email addresses, with respective data and a pdf attachment in detail."
							},
							"response": [
								{
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Messages",
					"item": [
						{
							"name": "Send a message as an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields - id, type, text, visitorId, agentId, createdAt\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"    pm.expect(responseData.type).to.exist;\r",
											"    pm.expect(responseData.text).to.exist;\r",
											"    pm.expect(responseData.visitorId).to.exist;\r",
											"    pm.expect(responseData.agentId).to.exist;\r",
											"    pm.expect(responseData.createdAt).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ID is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Visitor ID is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.visitorId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Visitor ID should be a non-empty string\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Agent ID is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.agentId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Agent ID should be a non-empty string\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"655b6f934b3a835a5428bea6_655b6f7e82e7dd1e783f7a12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages"
									]
								}
							},
							"response": [
								{
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields - id, type, text, visitorId, agentId, and createdAt\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"    pm.expect(responseData.type).to.exist;\r",
											"    pm.expect(responseData.text).to.exist;\r",
											"    pm.expect(responseData.visitorId).to.exist;\r",
											"    pm.expect(responseData.agentId).to.exist;\r",
											"    pm.expect(responseData.createdAt).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"ID is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Type should be either 'agent' or 'visitor'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.type).to.be.oneOf(['agent', 'visitor']);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CreatedAt is in a valid date format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.createdAt).to.be.a('number');\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "eL9kt8AFXCDq9rbzg",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a message sent by an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Id is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'type' is either 'agent' or 'visitor'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.type).to.be.oneOf(['agent', 'visitor']);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Text is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.text).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Text should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CreatedAt is a valid timestamp in milliseconds\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.createdAt).to.be.a('number');\r",
											"    pm.expect(responseData.createdAt.toString()).to.match(/^\\d{13}$/);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "eL9kt8AFXCDq9rbzg",
											"description": "(Required) ID of the message"
										}
									]
								},
								"description": "Only agents’ messages can be edited."
							},
							"response": [
								{
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a message sent by an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Deleted sucessfully\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3jqJ8c5KkprGiTjFB",
											"description": "(Required) ID of the message"
										}
									]
								},
								"description": "Only agents’ messages can be deleted."
							},
							"response": [
								{
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Status",
					"item": [
						{
							"name": "Sets agent’s status to online for 2-3 minutes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adent status is created online\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"655b6f934b3a835a5428bea6_655b6f7e82e7dd1e783f7a12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/agentOnlinePing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"agentOnlinePing"
									]
								},
								"description": "We recommend pinging this endpoint every minute for as long as the agent has to be considered online."
							},
							"response": [
								{
									"name": "Status of the agent was set successfully. Response body will be empty.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/agentOnlinePing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"agentOnlinePing"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/agentOnlinePing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"agentOnlinePing"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Pushed messages",
					"item": [
						{
							"name": "Send an automated message to a visitor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response has the required fields', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"    pm.expect(responseData.type).to.exist;\r",
											"    pm.expect(responseData.text).to.exist;\r",
											"    pm.expect(responseData.visitorId).to.exist;\r",
											"    pm.expect(responseData.agentId).to.exist;\r",
											"    pm.expect(responseData.createdAt).to.exist;\r",
											"    pm.expect(responseData.isPushed).to.exist;\r",
											"})\r",
											"\r",
											"pm.test('Id is a non-empty string', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Id should be a non-empty string');\r",
											"})\r",
											"\r",
											"pm.test('CreatedAt is a valid timestamp', function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.createdAt).to.be.a('number');\r",
											"    pm.expect(responseData.createdAt).to.be.above(0);\r",
											"})\r",
											"\r",
											"pm.test(\"IsPushed field is set to true\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.isPushed).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages"
									]
								},
								"description": "Example of automated messages: order status, announce new features in your web app, etc."
							},
							"response": [
								{
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"    pm.expect(responseData.type).to.exist;\r",
											"    pm.expect(responseData.text).to.exist;\r",
											"    pm.expect(responseData.visitorId).to.exist;\r",
											"    pm.expect(responseData.agentId).to.exist;\r",
											"    pm.expect(responseData.createdAt).to.exist;\r",
											"    pm.expect(responseData.isPushed).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ID is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Text is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.text).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Text should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CreatedAt is in a valid date format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.createdAt).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "SoDaHDHQqAtdpYMGH",
											"description": "(Required) ID of the message sent previously"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"VisitorId should be in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.visitorId).to.match(/[a-zA-Z0-9]{32}/, \"VisitorId should be a 32-character alphanumeric string\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"AgentId is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.agentId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"AgentId should be a non-empty string\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"CreatedAt is a valid timestamp\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.createdAt).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "SoDaHDHQqAtdpYMGH",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Deleted sucessfully\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "LhGgE5ASpMkminY3b",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Contact management",
			"item": [
				{
					"name": "Contacts",
					"item": [
						{
							"name": "Get all the contacts",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api-key",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "modifiedSince",
											"value": "2022-02-01T00:00:00.000",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"contact1@example.com\",\n      \"id\": 247,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407250\",\n        \"IDENTIFICATION\": \"1-3RHQ-259\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Brennon\",\n        \"FIRST_NAME\": \"Meg\",\n        \"DOB\": \"1986-05-02T00:00:00.000Z\",\n        \"ADDRESS\": \"1 5th avenue\",\n        \"ZIP_CODE\": \"44300\",\n        \"CITY\": \"New-York\",\n        \"ACTION_CODE\": \"17HH98CH\"\n      }\n    },\n    {\n      \"email\": \"33058407248@mailin-sms.com\",\n      \"id\": 245,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        61,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407248\",\n        \"IDENTIFICATION\": \"1-78JS-432\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Press\",\n        \"FIRST_NAME\": \"Sophia\",\n        \"DOB\": \"1980-09-11T00:00:00.000Z\",\n        \"ADDRESS\": \"5 Flower Street\",\n        \"ZIP_CODE\": \"44119\",\n        \"CITY\": \"Seattle\",\n        \"ACTION_CODE\": \"17HU765\"\n      }\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required field - id\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.exist;\r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.above(-1, \"Value should be a non-negative integer\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The id should be unique for each execution\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.id).to.exist.and.to.be.a('number');\r",
											"    \r",
											"    // Check if the id is unique among previous executions\r",
											"    const previousExecutions = pm.iterationData.get(\"previousExecutions\");\r",
											"    const isIdUnique = previousExecutions.every(execution => execution.id !== responseData.id);\r",
											"    pm.expect(isIdUnique).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"hammedzainn@yahoo.com\",\n  \"attributes\": {\n    \"FNAME\": \"oreoluwa\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									]
								}
							},
							"response": [
								{
									"name": "Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create Contact via DOI (Double-Opt-In) Flow",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"hammedzainny@gmail.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"oreoluwa\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"doubleOptinConfirmation"
									]
								}
							},
							"response": [
								{
									"name": "DOI Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "DOI Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update multiple contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"hammedzainny@gmail.com\",\n      \"id\": 3,\n      \"attributes\": {\n        \"FNAME\": \"oreoluwa\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        3\n      ],\n      \"unlinkListIds\": [\n        3\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"batch"
									]
								}
							},
							"response": [
								{
									"name": "All contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.sendinblue.com/v3/\n/contacts/batch",
											"protocol": "https",
											"host": [
												"api",
												"sendinblue",
												"com"
											],
											"path": [
												"v3",
												"\n",
												"contacts",
												"batch"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Few contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"batch"
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"successIds\": [\n    -42087947,\n    74324582\n  ],\n  \"failureIds\": [\n    670206,\n    -86165911\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"proident__8\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"e7eb@lQEBFvQLPEkt.jldh\",\n        \"XpCRkVUJp-jwi@wH.cjt\"\n      ]\n    },\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"exercitation41_\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"s1ORx3QG@wwTXjfg.xckw\",\n        \"PLC2NlHG8Msb@GbxoDEyLzfdXxPbpXCH.bcco\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"batch"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"subscribed\",\n    \"actionForEmailCampaigns\": \"hardBounces\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"export"
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input. File will be available in csv."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"export"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"export"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Import contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"ut_7f\": \"Lorem\",\n      \"deserunt_df\": \"Lorem\"\n    },\n    {\n      \"exercitation_30\": \"consequat Lorem\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"import"
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a contact's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.email).to.exist.and.to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ID is a non-negative integer\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.be.a('number').and.to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"EmailBlacklisted and smsBlacklisted are boolean values\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.emailBlacklisted).to.be.a('boolean');\r",
											"  pm.expect(responseData.smsBlacklisted).to.be.a('boolean');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate.\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{email}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
										}
									]
								},
								"description": "Along with the contact details, this endpoint will show the statistics of contact for the recent 90 days by default. To fetch the earlier statistics, please use Get contact campaign stats ``https://developers.sendinblue.com/reference/contacts-7#getcontactstats`` endpoint with the appropriate date ranges."
							},
							"response": [
								{
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"peggy.rain@example.com\",\n  \"id\": 42,\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"createdAt\": \"2017-05-02T16:40:31.000Z\",\n  \"modifiedAt\": \"2017-05-02T16:40:31.000Z\",\n  \"attributes\": {\n    \"FIRST_NAME\": \"Peggy\",\n    \"LAST_NAME\": \"Rain\",\n    \"SMS\": \"3087433387669\",\n    \"CIV\": \"1\",\n    \"DOB\": \"1986-04-13T00:00:00.000Z\",\n    \"ADDRESS\": \"987 5th avenue\",\n    \"ZIP_CODE\": \"87544\",\n    \"CITY\": \"New-York\",\n    \"AREA\": \"NY\"\n  },\n  \"listIds\": [\n    40\n  ],\n  \"statistics\": {\n    \"messagesSent\": [\n      {\n        \"campaignId\": 21,\n        \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n      },\n      {\n        \"campaignId\": 42,\n        \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n      }\n    ],\n    \"opened\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      },\n      {\n        \"campaignId\": 68,\n        \"count\": 1,\n        \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n        \"ip\": \"66.249.93.217\"\n      }\n    ],\n    \"clicked\": [\n      {\n        \"campaignId\": 21,\n        \"links\": [\n          {\n            \"count\": 2,\n            \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n            \"ip\": \"66.249.93.118\",\n            \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n          }\n        ]\n      }\n    ],\n    \"delivered\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "5",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You're not allowed to delete registered email contact with SendinBlue",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a contact",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"occaecat_3d3\": {},\n    \"consectetur_5\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"2tD@yHGSlOErIdPjXSRRCUPBPdlcwl.lkbz\",\n    \"IsBKLQFo@XuqjOjVDBfCmvxFMDtrmU.fogq\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "2",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get email campaigns' statistics for a contact",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier/campaignStats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier",
										"campaignStats"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate. Maximum difference between startDate and endDate should not be greater than 90 days\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "2",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact campaign statistics informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"sendermail@example.com\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"messagesSent\": [\n    {\n      \"campaignId\": 21,\n      \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n    },\n    {\n      \"campaignId\": 42,\n      \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n    },\n    {\n      \"campaignId\": 45,\n      \"eventTime\": \"2016-11-09T11:45:02.000Z\"\n    }\n  ],\n  \"opened\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    },\n    {\n      \"campaignId\": 45,\n      \"count\": 1,\n      \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n      \"ip\": \"66.249.93.217\"\n    }\n  ],\n  \"clicked\": [\n    {\n      \"campaignId\": 21,\n      \"links\": [\n        {\n          \"count\": 2,\n          \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n          \"ip\": \"66.249.93.118\",\n          \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n        }\n      ]\n    }\n  ],\n  \"delivered\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Folders",
					"item": [
						{
							"name": "Get all folders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Response is an object with folders property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('folders');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with count property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('count');\r",
											"});\r",
											"\r",
											"pm.test(\"Each element in the folders array has an id property\", function () {\r",
											"    pm.response.json().folders.forEach(function(folder) {\r",
											"        pm.expect(folder).to.have.property('id');\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Each element in the folders array has a name property\", function () {\r",
											"    pm.response.json().folders.forEach(function(folder) {\r",
											"        pm.expect(folder).to.have.property('name');\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Each element in the folders array has a totalBlacklisted property\", function () {\r",
											"    pm.response.json().folders.forEach(function(folder) {\r",
											"        pm.expect(folder).to.have.property('totalBlacklisted');\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Each element in the folders array has a totalSubscribers property\", function () {\r",
											"    pm.response.json().folders.forEach(function(folder) {\r",
											"        pm.expect(folder).to.have.property('totalSubscribers');\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Each element in the folders array has a uniqueSubscribers property\", function () {\r",
											"    pm.response.json().folders.forEach(function(folder) {\r",
											"        pm.expect(folder).to.have.property('uniqueSubscribers');\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Successfully Created\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required field 'id'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'id' should be a non-negative integer\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData.id).to.be.a('number');\r",
											"  pm.expect(responseData.id).to.be.above(-1, \"Value should be a non-negative integer\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'id' in the response matches the expected value\", function () {\r",
											"  const expectedId = 5;\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData.id).to.equal(expectedId);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"JAVASCRIP \"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns a folder's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Response is an object with id, name, totalBlacklisted, uniqueSubscribers, and totalSubscribers properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('id', 'name', 'totalBlacklisted', 'uniqueSubscribers', 'totalSubscribers');\r",
											"});\r",
											"\r",
											"pm.test(\"id is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"name is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.name).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"totalBlacklisted is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.totalBlacklisted).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"uniqueSubscribers is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.uniqueSubscribers).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"totalSubscribers is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.totalSubscribers).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "11",
											"description": "(Required) id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"name\": \"Client_Folder\",\n  \"totalBlacklisted\": 987,\n  \"totalSubscribers\": 16778,\n  \"uniqueSubscribers\": 17765\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SUCCESSFULLY UPDATED \", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"PYTHON FOLDER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "11",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a folder (and all its lists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Deleted Successfully\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "2",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get lists in a folder",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									],
									"variable": [
										{
											"key": "folderId",
											"value": "11",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder's Lists details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 46,\n      \"name\": \"Reactiv\",\n      \"totalSubscribers\": 7655,\n      \"totalBlacklisted\": 0,\n      \"uniqueSubscribers\": 7655\n    },\n    {\n      \"id\": 41,\n      \"name\": \"NY_Area\",\n      \"totalSubscribers\": 3654,\n      \"totalBlacklisted\": 23,\n      \"uniqueSubscribers\": 3677\n    },\n    {\n      \"id\": 22,\n      \"name\": \"VIP_Customer\",\n      \"totalSubscribers\": 8753,\n      \"totalBlacklisted\": 72,\n      \"uniqueSubscribers\": 8825\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists",
					"item": [
						{
							"name": "Get all the lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Validate the 'lists' array is present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.lists).to.exist.and.to.be.an('array');\r",
											"    pm.expect(responseData.lists).to.have.lengthOf(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the value of 'id' is a non-negative integer for each object in the 'lists' array\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.lists).to.be.an('array').and.to.have.lengthOf.at.least(1);\r",
											"    \r",
											"    responseData.lists.forEach(function(list) {\r",
											"        pm.expect(list.id).to.be.a('number').and.to.be.above(-1, \"'id' should be a non-negative integer\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the value of 'name' is a non-empty string for each object in the 'lists' array\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData.lists).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Array should not be empty\");\r",
											"\r",
											"  responseData.lists.forEach(function (list) {\r",
											"    pm.expect(list.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"  });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Lists informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 53,\n      \"name\": \"Spanish_Speakers\",\n      \"totalSubscribers\": 5432,\n      \"totalBlacklisted\": 65,\n      \"uniqueSubscribers\": 5497,\n      \"folderId\": 1\n    },\n    {\n      \"id\": 50,\n      \"name\": \"Other\",\n      \"totalSubscribers\": 10976,\n      \"totalBlacklisted\": 765,\n      \"uniqueSubscribers\": 11741,\n      \"folderId\": 2\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Created Successfully\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with id property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('id');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"folderId\": 13,\n  \"name\": \"Spllimentary List\",\n  \"is_folder\": false,\n  \"folder_name\": \"JAVASCRIPT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get contacts in a list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "veniam elit in",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									],
									"variable": [
										{
											"key": "listId",
											"value": "13",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"id\": 45,\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1,\n        2\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Pain\",\n        \"FIRSTNAME\": \"Alex\",\n        \"DOB\": \"2010-12-31T00:00:00.000Z\",\n        \"GENDER\": \"Kid\"\n      }\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"id\": 32,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Smith\",\n        \"FIRSTNAME\": \"John\",\n        \"DOB\": \"1986-06-21T00:00:00.000Z\",\n        \"GENDER\": \"Men\"\n      }\n    },\n    {\n      \"email\": \"helen.rose@example.com\",\n      \"id\": 65,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Rose\",\n        \"FIRSTNAME\": \"Helen\",\n        \"DOB\": \"1988-11-02T00:00:00.000Z\",\n        \"GENDER\": \"Women\",\n        \"SMS\": \"3375599887766\"\n      }\n    }\n  ],\n  \"count\": 17655\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Add existing contacts to a list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"add"
									],
									"variable": [
										{
											"key": "listId",
											"value": "13396752",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts have been added successfully to the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact from a list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"remove"
									],
									"variable": [
										{
											"key": "listId",
											"value": "13396752",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts have been removed successfully from the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a list's details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "13396752",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "List informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 12,\n  \"name\": \"Newsletter_Weekly\",\n  \"totalSubscribers\": 6533,\n  \"totalBlacklisted\": 63,\n  \"uniqueSubscribers\": 6596,\n  \"folderId\": 1,\n  \"createdAt\": \"2016-02-26T11:56:08.000Z\",\n  \"campaignStats\": [\n    {\n      \"campaignId\": 15,\n      \"stats\": {\n        \"uniqueClicks\": 701,\n        \"clickers\": 789,\n        \"complaints\": 0,\n        \"delivered\": 6632,\n        \"sent\": 6645,\n        \"softBounces\": 34,\n        \"hardBounces\": 4,\n        \"uniqueViews\": 3442,\n        \"unsubscriptions\": 4,\n        \"viewed\": 4322,\n        \"deferred\": 0\n      }\n    },\n    {\n      \"campaignId\": 45,\n      \"stats\": {\n        \"uniqueClicks\": 654,\n        \"clickers\": 788,\n        \"complaints\": 1,\n        \"delivered\": 4078,\n        \"sent\": 4334,\n        \"softBounces\": 18,\n        \"hardBounces\": 2,\n        \"uniqueViews\": 987,\n        \"unsubscriptions\": 4,\n        \"viewed\": 1555,\n        \"deferred\": 0\n      }\n    }\n  ],\n  \"dynamicList\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a list",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "13396752",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "List updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a list",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "13396752",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "List deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Attributes",
					"item": [
						{
							"name": "List all attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Each attribute has a non-empty name\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.attributes).to.be.an('array');\r",
											"    responseData.attributes.forEach(function(attribute) {\r",
											"        pm.expect(attribute.name).to.exist.and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.test(\"Validate attribute enumeration\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.attributes).to.be.an('array');\r",
											"  \r",
											"  responseData.attributes.forEach(function(attribute) {\r",
											"    if (attribute.enumeration) {\r",
											"      pm.expect(attribute.enumeration).to.be.an('array');\r",
											"      \r",
											"      attribute.enumeration.forEach(function(element) {\r",
											"        pm.expect(element.value).to.exist.and.to.not.be.empty;\r",
											"        pm.expect(element.label).to.exist.and.to.not.be.empty;\r",
											"      });\r",
											"    }\r",
											"  });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes"
									]
								}
							},
							"response": [
								{
									"name": "Attributes listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributes\": [\n    {\n      \"name\": \"LASTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"FIRSTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"DOB\",\n      \"category\": \"normal\",\n      \"type\": \"date\"\n    },\n    {\n      \"name\": \"GENDER\",\n      \"category\": \"category\",\n      \"type\": \"text\",\n      \"enumeration\": [\n        {\n          \"value\": 1,\n          \"label\": \"Men\"\n        },\n        {\n          \"value\": 2,\n          \"label\": \"Women\"\n        },\n        {\n          \"value\": 3,\n          \"label\": \"Kid\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update contact attribute",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"key": "attributeName",
											"value": "BLACKLIST",
											"description": "(Required) Name of the existing attribute"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Attribute not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create contact attribute",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"key": "attributeName",
											"value": "BLACKLIST1",
											"description": "(Required) Name of the attribute"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an attribute",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"key": "attributeName",
											"value": "veniam elit in",
											"description": "(Required) Name of the existing attribute"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Attribute not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Transactional",
			"item": [
				{
					"name": "Email API",
					"item": [
						{
							"name": "Send a transactional email",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\"\n  },\n  \"to\": [\n    {\n      \"email\": \"mauricio+unsubtest@sendinblue.com\",\n      \"name\": \"mauricio\"\n    }\n  ],\n  \"templateId\": 69\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"name": "transactional email scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Batch send transactional emails",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the list of transactional emails on the basis of allowed filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails?email=veniam elit in&templateId=13396752&messageId=veniam elit in&startDate=veniam elit in&endDate=veniam elit in&sort=desc&limit=500&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails"
									],
									"query": [
										{
											"key": "email",
											"value": "veniam elit in",
											"description": "**Mandatory if templateId and messageId are not passed in query filters.** Email address to which transactional email has been sent.\n"
										},
										{
											"key": "templateId",
											"value": "13396752",
											"description": "**Mandatory if email and messageId are not passed in query filters.** Id of the template that was used to compose transactional email.\n"
										},
										{
											"key": "messageId",
											"value": "veniam elit in",
											"description": "**Mandatory if templateId and email are not passed in query filters.** Message ID of the transactional email sent.\n"
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the list. **Maximum time period that can be selected is one month**.\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the list. **Maximum time period that can be selected is one month.**\n"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										}
									]
								},
								"description": "This endpoint will show the list of emails for past 30 days by default. To retrieve emails before that time, please pass startDate and endDate in query filters."
							},
							"response": [
								{
									"name": "List of transactional emails",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=veniam elit in&templateId=13396752&messageId=veniam elit in&startDate=veniam elit in&endDate=veniam elit in&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 120,\n  \"transactionalEmails\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"subject\": \"summer camp\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5787683@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-std2341\",\n      \"date\": \"2019-05-25T11:53:26.000Z\"\n    },\n    {\n      \"email\": \"test@test.com\",\n      \"subject\": \"details verification\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5700093@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-s99a341\",\n      \"date\": \"2019-05-25T07:28:11.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=veniam elit in&templateId=13396752&messageId=veniam elit in&startDate=veniam elit in&endDate=veniam elit in&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete scheduled emails by batchId or messageId",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/email/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
										}
									]
								},
								"description": "Delete scheduled batch of emails by batchId or single scheduled email by messageId"
							},
							"response": [
								{
									"name": "Scheduled email(s) deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the personalized content of a sent transactional email",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "veniam elit in",
											"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Transactional email content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"abc@example.com\",\n  \"subject\": \"Summer Camps\",\n  \"templateId\": 12,\n  \"date\": \"2016-02-25T11:53:26.000Z\",\n  \"events\": [\n    {\n      \"name\": \"sent\",\n      \"time\": \"2016-02-25T11:53:26.000Z\"\n    },\n    {\n      \"name\": \"delivered\",\n      \"time\": \"2016-02-25T11:55:26.000Z\"\n    },\n    {\n      \"name\": \"opened\",\n      \"time\": \"2016-02-26T09:53:26.000Z\"\n    }\n  ],\n  \"body\": \"<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>\"\n}"
								}
							]
						},
						{
							"name": "Fetch scheduled emails by batchId or messageId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emailStatus",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2022-02-02",
											"description": "Mandatory if `endDate` is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Can be maximum 30 days older tha current date."
										},
										{
											"key": "endDate",
											"value": "2022-03-02",
											"description": "Mandatory if `startDate` is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed. Not valid when identifier is `messageId`."
										},
										{
											"key": "status",
											"value": "queued",
											"description": "Filter the records by `status` of the scheduled email batch or message. Not valid when identifier is `messageId`."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page. Not valid when identifier is `messageId`."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page.  Not valid when identifier is `messageId`."
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
										}
									]
								},
								"description": "Fetch scheduled batch of emails by batchId or single scheduled email by messageId (Can retrieve data upto 30 days old)"
							},
							"response": [
								{
									"name": "Scheduled email batches",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 3,\n  \"batches\": [\n    {\n      \"scheduledAt\": \"2022-02-28T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"status\": \"queued\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-24T11:36:43.576000000Z\",\n      \"status\": \"processed\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"status\": \"inProgress\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Templates",
					"item": [
						{
							"name": "Get the list of email templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'count' field is a non-negative integer\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.count).to.exist.and.to.be.a('number').and.to.satisfy(function (count) {\r",
											"    return count >= 0;\r",
											"  });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'templates' field is an array and is not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.templates).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Array should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'id' field for each template in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.templates).to.exist.and.to.be.an('array');\r",
											"    \r",
											"    responseData.templates.forEach(function(template) {\r",
											"        pm.expect(template.id).to.exist.and.to.be.a('number');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'name' field for each template in the response\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.templates).to.be.an('array');\r",
											"\r",
											"  responseData.templates.forEach(function(template) {\r",
											"    pm.expect(template.name).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"  });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									],
									"query": [
										{
											"key": "templateStatus",
											"value": "false",
											"description": "Filter on the status of the template. Active = true, inactive = false"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email templates informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 2,\n  \"templates\": [\n    {\n      \"id\": 5,\n      \"name\": \"ChristomasTimeTemplate\",\n      \"subject\": \"Merry Christmas\",\n      \"isActive\": false,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Festival\",\n      \"htmlContent\": \"HTML CONTENT 1\",\n      \"createdAt\": \"2016-02-24T14:44:24.000Z\",\n      \"modifiedAt\": \"2016-02-24T15:37:11.000Z\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"SummerSales2017Template\",\n      \"subject\": \"Enjoy our summer Sales !\",\n      \"isActive\": true,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Summer\",\n      \"htmlContent\": \"HTML CONTENT 2\",\n      \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n      \"modifiedAt\": \"2016-02-25T11:53:26.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create an email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"adedejior@gmail.com\"\n   // \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"hammedzainny@gmail.com\",\n  \"toField\": \"oreoluwa hammed\",\n  \"attachmentUrl\": \"https://my.brevo.com\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns the template information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"The id field is a non-negative integer\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.exist;\r",
											"  pm.expect(responseData.id).to.be.a('number');\r",
											"  pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'name' field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Subject field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.subject).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "5",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email template informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 33,\n  \"name\": \"OrderConfirmation\",\n  \"subject\": \"Order Confirmation : Thanks for your Purchase !\",\n  \"isActive\": true,\n  \"testSent\": false,\n  \"sender\": {\n    \"name\": \"John\",\n    \"email\": \"john.smith@example.com\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"\",\n  \"tag\": \"\",\n  \"htmlContent\": \"HTML CONTENT 4\",\n  \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n  \"modifiedAt\": \"2016-02-25T11:53:26.000Z\",\n  \"doiTemplate\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Sucessfully updated\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \n    \"id\": 1\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"Adedejior@gmail.com\",\n  \"toField\": \"UPDATED NAME\",\n\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "1",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email template updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an inactive email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"deleted sucessfully\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "5",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "Inactive transactional email template has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a template to your test list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Email sent\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"type\": \"template\",\n    \"tt\": \"input-list-test\",\n    \"emails\": \"Adedejior@gmail.com\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvbXkuYnJldm8uY29tXC9jYW1wXC9zZW5kdGVzdCIsImF1ZCI6Imh0dHBzOlwvXC9teS5icmV2by5jb21cLyIsInN1YiI6IjY3OTczMDgiLCJpYXQiOjAsImp0aSI6IiIsInJrZXkiOiJQdGs4WWR0aVZjIn0.osQ_ZuUA7G1XBml-8e54rirOX2WPEEHkZhAtG9HighA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId",
										"sendTest"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "1",
											"description": "(Required) Id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Statistics",
					"item": [
						{
							"name": "Get your transactional email activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validate that the range is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.range).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Tag of the emails",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 90 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"range\": \"2016-09-08|2017-04-28\",\n  \"requests\": 19887,\n  \"delivered\": 18996,\n  \"hardBounces\": 234,\n  \"softBounces\": 1533,\n  \"clicks\": 9987,\n  \"uniqueClicks\": 8766,\n  \"opens\": 17654,\n  \"uniqueOpens\": 13688,\n  \"spamReports\": 1,\n  \"blocked\": 2,\n  \"invalid\": 0,\n  \"unsubscribed\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your transactional email activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Validate the presence and length of the 'reports' array\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.reports).to.exist.and.to.be.an('array');\r",
											"    pm.expect(responseData.reports).to.have.lengthOf(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Date in each report object is in valid date format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.reports).to.be.an('array');\r",
											"\r",
											"    responseData.reports.forEach(function(report) {\r",
											"        pm.expect(report.date).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/, \"Date format should be valid\");\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD)\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD)\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Tag of the emails",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"clicks\": 1026,\n      \"uniqueClicks\": 720,\n      \"opens\": 5091,\n      \"uniqueOpens\": 2318,\n      \"spamReports\": 0,\n      \"blocked\": 519,\n      \"invalid\": 1,\n      \"unsubscribed\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"clicks\": 1514,\n      \"uniqueClicks\": 1090,\n      \"opens\": 10089,\n      \"uniqueOpens\": 4393,\n      \"spamReports\": 0,\n      \"blocked\": 920,\n      \"invalid\": 2,\n      \"unsubscribed\": 3\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your transactional email activity (unaggregated events)",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api-key",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sendinblue.com/v3/smtp/statistics/events?days=11",
									"protocol": "https",
									"host": [
										"api",
										"sendinblue",
										"com"
									],
									"path": [
										"v3",
										"smtp",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "11",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n"
										},
										{
											"key": "email",
											"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml",
											"description": "Filter the report for a specific email addresses",
											"disabled": true
										},
										{
											"key": "event",
											"value": "invalid",
											"description": "Filter the report for a specific event type",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "veniam elit in",
											"description": "Filter the report for tags (serialized and urlencoded array)",
											"disabled": true
										},
										{
											"key": "messageId",
											"value": "202212281024.62341432715@smtp-relay.mailin.fr",
											"description": "Filter on a specific message id",
											"disabled": true
										},
										{
											"key": "templateId",
											"value": "13396752",
											"description": "Filter on a specific template id",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 30 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"name": "Email events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"deferred\",\n      \"reason\": \"Error connection timeout\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 4\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-13T16:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"delivered\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 5\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blocked Contacts",
					"item": [
						{
							"name": "Get the list of blocked or unsubscribed transactional contacts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco,dolor elit aute&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the blocked or unsubscribed contacts\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the blocked or unsubscribed contacts\n"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "senders",
											"value": "ullamco,dolor elit aute",
											"description": "Comma separated list of emails of the senders from which contacts are blocked or unsubscribed"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of blocked or unsubscribed transactional contacts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 1,\n  \"contacts\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"senderEmail\": \"ez312@gmal.com\",\n      \"reason\": {\n        \"message\": \"Admin blocked\",\n        \"code\": \"adminBlocked\"\n      },\n      \"blockedAt\": \"2017-05-01T12:30:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock or resubscribe a transactional contact",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts",
										":email"
									],
									"variable": [
										{
											"key": "email",
											"value": "veniam elit in",
											"description": "(Required) contact email (urlencoded) to unblock."
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact unblocked",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact email not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blocked Domains",
					"item": [
						{
							"name": "Get the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Response is an object with domains property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('domains');\r",
											"});\r",
											"\r",
											"pm.test(\"Each domain in the response is a string\", function () {\r",
											"    pm.response.json().domains.forEach(function(domain) {\r",
											"        pm.expect(domain).to.be.a('string');\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains"
									]
								},
								"description": "Get the list of blocked domains"
							},
							"response": [
								{
									"name": "List of blocked domains",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"domains\": [\n    \"example.com\",\n    \"testdomain.com\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Add a new domain to the list of blocked domains",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": \"example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains"
									]
								},
								"description": "Blocks a new domain in order to avoid messages being sent to the same"
							},
							"response": [
								{
									"name": "Domain is successfully blocked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock an existing domain from the list of blocked domains",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains",
										":domain"
									],
									"variable": [
										{
											"key": "domain",
											"value": "veniam elit in",
											"description": "(Required) The name of the domain to be deleted"
										}
									]
								},
								"description": "Unblocks an existing domain from the list of blocked domains"
							},
							"response": [
								{
									"name": "Domain is successfully deleted from the list of blocked domains",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Domain not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Logs",
					"item": [
						{
							"name": "Delete hardbounces",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/deleteHardbounces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"deleteHardbounces"
									]
								},
								"description": "Delete hardbounces. To use carefully (e.g. in case of temporary ISP failures)"
							},
							"response": [
								{
									"name": "Hardbounces deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/deleteHardbounces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"deleteHardbounces"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/deleteHardbounces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"deleteHardbounces"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMTP transactional log",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/log/:messageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"log",
										":messageId"
									],
									"variable": [
										{
											"key": "messageId",
											"value": "veniam elit in",
											"description": "(Required) MessageId of the transactional log to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Transactional Logs deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Message ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Inbound Email Parsing",
					"item": [
						{
							"name": "Get the list of all the events for the received emails.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"pm.test(\"Response is an object with events property\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('events');\r",
											"});\r",
											"\r",
											"pm.test(\"Each element in the events array has a uuid, date, sender, and recipient property\", function () {\r",
											"    pm.response.json().events.forEach(function(event) {\r",
											"        pm.expect(event).to.have.property('uuid');\r",
											"        pm.expect(event).to.have.property('date');\r",
											"        pm.expect(event).to.have.property('sender');\r",
											"        pm.expect(event).to.have.property('recipient');\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events?sender=Adedejior@gmail.com&startDate=2023-10-30&endDate=2023-11-29&limit=100&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events"
									],
									"query": [
										{
											"key": "sender",
											"value": "Adedejior@gmail.com",
											"description": "Email address of the sender."
										},
										{
											"key": "startDate",
											"value": "2023-10-30",
											"description": "Mandatory if endDate is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Maximum time period that can be selected is one month."
										},
										{
											"key": "endDate",
											"value": "2023-11-29",
											"description": "Mandatory if startDate is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation"
										}
									]
								},
								"description": "This endpoint will show the list of all the events for the received emails."
							},
							"response": [
								{
									"name": "List of events for received emails.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-1a825d56\",\n      \"date\": \"2017-03-11T12:30:00.000Z\",\n      \"sender\": \"john@example.com\",\n      \"recipient\": \"alexa@example.com\"\n    },\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-61670463431b\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"sender\": \"alice@example.com\",\n      \"recipient\": \"bob@example.com\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Fetch all events history for one particular received email.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "veniam elit in",
											"description": "(Required) UUID to fetch events specific to recieved email"
										}
									]
								},
								"description": "This endpoint will show the list of all events history for one particular received email."
							},
							"response": [
								{
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"receivedAt\": \"2017-03-12T12:30:00.000Z\",\n  \"deliveredAt\": \"2017-03-12T12:31:00.000Z\",\n  \"sender\": \"alice@example.com\",\n  \"recipient\": \"bob@example.com\",\n  \"messageId\": \"<a_nice@message.id>\",\n  \"subject\": \"Re: Question about your API\",\n  \"attachments\": [\n    {\n      \"name\": \"invoice.pdf\",\n      \"contentType\": \"application/pdf\",\n      \"contentId\": null,\n      \"contentLength\": 12345\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"type\": \"received\"\n    },\n    {\n      \"date\": \"2017-03-12T12:30:04.000Z\",\n      \"type\": \"webhookFailed\"\n    },\n    {\n      \"date\": \"2017-03-12T12:31:04.000Z\",\n      \"type\": \"webhookDelivered\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Retrieve inbound attachment with download token.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"attachments",
										":downloadToken"
									],
									"variable": [
										{
											"key": "downloadToken",
											"value": "veniam elit in",
											"description": "(Required) Token to fetch a particular attachment"
										}
									]
								},
								"description": "This endpoint will retrieve inbound attachment with download token."
							},
							"response": [
								{
									"name": "Attachment information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"download.png\"",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "4032",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"body": "veniam elit in"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "attachment not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transactional SMS",
					"item": [
						{
							"name": "Send SMS message to a mobile number",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/sms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"sms"
									]
								}
							},
							"response": [
								{
									"name": "SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": 1511882900176220,\n  \"reference\": \"ab1cde2fgh3i4jklmno\",\n  \"smsCount\": 2,\n  \"usedCredits\": 0.7,\n  \"remainingCredits\": 82.85\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your SMS. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SMS statistics",
					"item": [
						{
							"name": "Get your SMS activity aggregated over a period of time",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n"
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). **Not compatible with startDate and endDate**\n"
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Filter on a tag"
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"range\": \"2015-05-22|2017-11-29\",\n  \"requests\": 54,\n  \"delivered\": 16,\n  \"hardBounces\": 5,\n  \"softBounces\": 26,\n  \"blocked\": 4,\n  \"unsubscribed\": 10,\n  \"replied\": 8,\n  \"accepted\": 6,\n  \"rejected\": 14\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your SMS activity aggregated per day",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n"
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n"
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Filter on a tag"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"blocked\": 1026,\n      \"unsubscribed\": 720,\n      \"replied\": 5091,\n      \"accepted\": 2318,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"blocked\": 1514,\n      \"unsubscribed\": 1090,\n      \"replied\": 10089,\n      \"accepted\": 4393,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-02T00:00:00.000Z\",\n      \"requests\": 14321,\n      \"delivered\": 13427,\n      \"hardBounces\": 16,\n      \"softBounces\": 176,\n      \"blocked\": 1646,\n      \"unsubscribed\": 1170,\n      \"replied\": 11563,\n      \"accepted\": 4689,\n      \"rejected\": 0\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your SMS activity (unaggregated events)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page"
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n"
										},
										{
											"key": "phoneNumber",
											"value": "veniam elit in",
											"description": "Filter the report for a specific phone number"
										},
										{
											"key": "event",
											"value": "bounces",
											"description": "Filter the report for specific events"
										},
										{
											"key": "tags",
											"value": "veniam elit in",
											"description": "Filter the report for specific tags passed as a serialized urlencoded array"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Sms events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T12:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"sent\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabWaiting\"\n    },\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T16:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"delivered\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabRequest\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all webhooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the presence and length of the 'webhooks' array\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.webhooks).to.exist.and.to.be.an('array');\r",
											"    pm.expect(responseData.webhooks).to.have.lengthOf(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the 'url' field in each webhook object is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.webhooks).to.be.an('array');\r",
											"    \r",
											"    responseData.webhooks.forEach(function(webhook) {\r",
											"        pm.expect(webhook.url).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the 'id' field in each webhook object is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.webhooks).to.be.an('array');\r",
											"    \r",
											"    responseData.webhooks.forEach(function (webhook) {\r",
											"        pm.expect(webhook.id).to.be.a('number').and.to.be.at.least(0);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "type",
											"value": "transactional",
											"description": "Filter on webhook type"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of webhook creation"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhooks informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"webhooks\": [\n    {\n      \"url\": \"https://example.domain.com/webhook/events/kzfxxxxxxxx0uyo1\",\n      \"id\": 9864,\n      \"description\": \"Webhook triggered on campaign openings\",\n      \"events\": [\n        \"opened\"\n      ],\n      \"type\": \"transac\",\n      \"createdAt\": \"2016-07-18T12:30:09.000Z\",\n      \"modifiedAt\": \"2016-07-18T16:00:50.000Z\"\n    },\n    {\n      \"url\": \"http://exmaple.domain.com/15kxxxxxn1\",\n      \"id\": 22770,\n      \"description\": \"Webhook triggered on campaign hard bounces\",\n      \"events\": [\n        \"hardBounces\"\n      ],\n      \"type\": \"marketing\",\n      \"createdAt\": \"2017-02-20T14:30:00.000Z\",\n      \"modifiedAt\": \"2017-02-20T19:00:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//this test is to verify the status is 200 created\r",
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required field - id\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id is a non-negative integer\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.id).to.be.a('number');\r",
											"    pm.expect(responseData.id).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body matches expected schema\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.have.property(\"id\").that.is.a(\"number\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"events\": [\n        \"spam\",\n        \"opened\",\n        \"click\",\n        \"hardBounce\",\n        \"softBounce\",\n        \"unsubscribed\",\n        \"listAddition\",\n        \"delivered\"\n    ],\n    \"url\": \"https://webhook.site/5ebc5d36-217f-4989-81fd-5f02cbb49c6d\",\n    \"description\": \"test for SMS\",\n    \"type\": \"marketing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a webhook details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "927689",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"http://example.domain.com/1brxxxxxx5p1\",\n  \"id\": 7287,\n  \"description\": \"Webhook triggered on campaign openings and addition of lists\",\n  \"events\": [\n    \"listAdditions\",\n    \"opened\"\n  ],\n  \"type\": \"marketing\",\n  \"createdAt\": \"2016-06-07T09:10:10.000Z\",\n  \"modifiedAt\": \"2016-06-08T11:30:00.000Z\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a webhook",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "927689",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a webhook",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "13396752",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Reseller",
					"item": [
						{
							"name": "Credits",
							"item": [
								{
									"name": "Add Email and/or SMS credits to a specific child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"add"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Credits added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Remove Email and/or SMS credits from a specific child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"remove"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Credits removed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "IP management",
							"item": [
								{
									"name": "Associate a dedicated IP to the child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"associate"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Dedicated IP is associated to the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Dissociate a dedicated IP to the child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"dissociate"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Dedicated IP is dissociated from the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Domains",
							"item": [
								{
									"name": "Get all sender domains for a specific child account",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Sender domains of the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"domain\": \"mycustomdomain.com\",\n    \"active\": true\n  },\n  {\n    \"domain\": \"mynewdomain.com\",\n    \"active\": true\n  }\n]"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Create a domain for a child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Domain added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update the sender domain of reseller's child based on the childIdentifier and domainName passed",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												},
												{
													"key": "domainName",
													"value": "veniam elit in",
													"description": "(Required) Pass the existing domain that needs to be updated"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child domain updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete the sender domain of the reseller child based on the childIdentifier and domainName passed",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												},
												{
													"key": "domainName",
													"value": "veniam elit in",
													"description": "(Required) Pass the existing domain that needs to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"name": "child domain deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Child accounts",
							"item": [
								{
									"name": "Get a child account's details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "1",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Information for the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyCompany\",\n  \"credits\": {\n    \"emailCredits\": 98555,\n    \"smsCredits\": 87556\n  },\n  \"statistics\": {\n    \"previousMonthTotalSent\": 7654,\n    \"currentMonthTotalSent\": 4566,\n    \"totalSent\": 987554\n  },\n  \"password\": \"abC0xxxxx3jkL\",\n  \"ips\": [\n    \"176.2.39.4\",\n    \"231.43.21.7\"\n  ],\n  \"apiKeys\": {\n    \"v2\": [\n      {\n        \"name\": \"N˚2\",\n        \"key\": \"nOpxxxxxy7z\"\n      }\n    ],\n    \"v3\": [\n      {\n        \"name\": \"N˚3\",\n        \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n      }\n    ]\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child based on the child identifier supplied",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete a single reseller child based on the child identifier supplied",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or child id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "child deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child account status based on the identifier supplied",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountStatus"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child account status updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the status of a reseller's child account creation, whether it is successfully created (exists) or not based on the childIdentifier supplied",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountCreationStatus"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "status of reseller's child account",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"childAccountCreated\": true\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get session token to access Sendinblue (SSO)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"auth"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										},
										"description": "It returns a session [token] which will remain valid for a short period of time. A child account will be able to access a white-labeled section by using the following url pattern => https:/email.mydomain.com/login/sso?token=[token]"
									},
									"response": [
										{
											"name": "Session token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the list of all children accounts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Number of documents for child accounts information per page"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Index of the first document in the page"
												}
											]
										}
									},
									"response": [
										{
											"name": "list of children",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"children\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"companyName\": \"MyCompany\",\n      \"credits\": {\n        \"emailCredits\": 98555,\n        \"smsCredits\": 87556\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 7654,\n        \"currentMonthTotalSent\": 4566,\n        \"totalSent\": 987554\n      },\n      \"password\": \"abC0xxxxxx3jkL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"N˚2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"N˚3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187588\n    },\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"firstName\": \"Alex\",\n      \"lastName\": \"Pain\",\n      \"companyName\": \"MyStore\",\n      \"credits\": {\n        \"emailCredits\": 2000,\n        \"smsCredits\": 0\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 654,\n        \"currentMonthTotalSent\": 300,\n        \"totalSent\": 6553\n      },\n      \"password\": \"abC0xxxxx64kL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"N˚2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"N˚3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187669\n    }\n  ]\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Creates a reseller child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											]
										}
									},
									"response": [
										{
											"name": "child created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authKey\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\",\n  \"id\": 1234567\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Process",
					"item": [
						{
							"name": "Return all the processes for your account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number limitation for the result returned"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "processes informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processes\": [\n    {\n      \"id\": 40,\n      \"status\": \"completed\",\n      \"name\": \"TRANS-CALC\"\n    },\n    {\n      \"id\": 43,\n      \"status\": \"queued\",\n      \"name\": \"TRANS-GLOBAL-CALC\"\n    },\n    {\n      \"id\": 194,\n      \"status\": \"completed\",\n      \"name\": \"SEARCH_EXPORT_USERS\",\n      \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return the informations for a process",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes/:processId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"variable": [
										{
											"key": "processId",
											"value": "13396752",
											"description": "(Required) Id of the process"
										}
									]
								}
							},
							"response": [
								{
									"name": "process informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 194,\n  \"status\": \"completed\",\n  \"name\": \"SEARCH_EXPORT_USERS\",\n  \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Process ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"processId is invalid\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Corporate",
					"item": [
						{
							"name": "Get the details of requested master account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/masterAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"masterAccount"
									]
								},
								"description": "This endpoint will provide the details of the master account."
							},
							"response": [
								{
									"name": "Master account details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/masterAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"masterAccount"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"sample@example.com\",\n  \"companyName\": \"Corp Sample 1-1\",\n  \"id\": 1003286,\n  \"currencyCode\": \"INR\",\n  \"timezone\": \"Europe/Paris\",\n  \"billingInfo\": {\n    \"email\": \"sample@example.com\",\n    \"companyName\": \"Corp Sample 1-1\",\n    \"name\": {\n      \"givenName\": \"Uday\",\n      \"familyName\": \"Pandit\"\n    },\n    \"address\": {\n      \"streetAddress\": \"C-92\",\n      \"locality\": \"Pandav Nagar, New Delhi\",\n      \"postalCode\": \"560048\",\n      \"stateCode\": \"UP\",\n      \"countryCode\": \"IN\"\n    }\n  },\n  \"planInfo\": {\n    \"currencyCode\": \"INR\",\n    \"nextBillingAt\": 1637739295,\n    \"price\": 2100,\n    \"planPeriod\": \"month\",\n    \"subAccounts\": 15,\n    \"features\": [\n      {\n        \"name\": \"MULTI_USER\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 15,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"ADVANCED_REPORTING\",\n        \"unitValue\": 1,\n        \"quantity\": 12,\n        \"used\": 1,\n        \"remaining\": 11\n      },\n      {\n        \"name\": \"INBOX\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 10,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"LANDING_PAGE\",\n        \"unitValue\": 5,\n        \"quantity\": 10,\n        \"used\": 11,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"RECURRING_CREDITS\",\n        \"unitValue\": 1,\n        \"quantity\": 500,\n        \"used\": 1,\n        \"remaining\": 499\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/masterAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"masterAccount"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of all the sub-accounts of the master account.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									],
									"query": [
										{
											"key": "offset",
											"value": "-41398727",
											"description": "(Required) Index of the first sub-account in the page"
										},
										{
											"key": "limit",
											"value": "-41398727",
											"description": "(Required) Number of sub-accounts to be displayed on each page"
										}
									]
								},
								"description": "This endpoint will provide the list all the sub-accounts of the master account."
							},
							"response": [
								{
									"name": "Sub-accounts list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 3,\n  \"subAccounts\": [\n    {\n      \"id\": 4043629,\n      \"companyName\": \"Company1\",\n      \"active\": \"true,\",\n      \"createdAt\": 1631523176\n    },\n    {\n      \"id\": 3984002,\n      \"companyName\": \"Company2\",\n      \"active\": true,\n      \"createdAt\": 1629439311\n    },\n    {\n      \"id\": 3524191,\n      \"companyName\": \"Company3\",\n      \"active\": true,\n      \"createdAt\": 1614713641\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sub-account under a master account.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									]
								},
								"description": "This endpoint will create a new sub-account under a master account"
							},
							"response": [
								{
									"name": "Created sub-account ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 4109344\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Missing companyName attribute in the request\"\n}"
								}
							]
						},
						{
							"name": "Generate SSO token to access Sendinblue",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										"ssoToken"
									]
								},
								"description": "This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://app.sendinblue.com/account/login/sub-account/sso/[token], where [token] will be replaced by the actual token."
							},
							"response": [
								{
									"name": "Session token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"Invalid sub-account id.\"\n}"
								},
								{
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						},
						{
							"name": "Get sub-account details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "13396752",
											"description": "(Required) Id of the sub-account organization"
										}
									]
								},
								"description": "This endpoint will provide the details for the specified sub-account company"
							},
							"response": [
								{
									"name": "Sub-account organization details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"Uday Pandit\",\n  \"email\": \"uday+1@sendinblue.com\",\n  \"companyName\": \"API-Sub-26thOct21-4\",\n  \"planInfo\": {\n    \"credits\": {\n      \"sms\": 1234,\n      \"emails\": {\n        \"quantity\": 2000,\n        \"remaining\": 1955\n      },\n      \"features\": {\n        \"inbox\": {\n          \"quantity\": 20,\n          \"remaining\": 12\n        },\n        \"landingPage\": {\n          \"quantity\": 25,\n          \"remaining\": 14\n        },\n        \"users\": {\n          \"quantity\": 30,\n          \"remaining\": 14\n        }\n      },\n      \"planType\": \"paid\"\n    }\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sub-account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "13396752",
											"description": "(Required) Id of the sub-account organization to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when sub-account is deleted succesfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Sub-account 2039dfsddf885 is not valid\"\n}"
								},
								{
									"name": "sub-account not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"document_not_found\",\n  \"message\": \"Sub-account 2039885 was not found\"\n}"
								}
							]
						},
						{
							"name": "Update sub-account plan",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id",
										"plan"
									],
									"variable": [
										{
											"key": "id",
											"value": "13396752",
											"description": "(Required) Id of the sub-account organization"
										}
									]
								},
								"description": "This endpoint will update the sub-account plan"
							},
							"response": [
								{
									"name": "Sub account plan updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Account data",
					"item": [
						{
							"name": "Get your account information, plan and credits details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify that the 'type' in each 'plan' object is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.plan).to.be.an('array').that.is.not.empty;\r",
											"    responseData.plan.forEach(function(planObj) {\r",
											"        pm.expect(planObj.type).to.be.a('string').and.to.have.lengthOf.at.least(1);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Address object is present and contains expected fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.address).to.exist;\r",
											"    pm.expect(responseData.address).to.have.property('city');\r",
											"    pm.expect(responseData.address).to.have.property('street');\r",
											"    pm.expect(responseData.address).to.have.property('zipCode');\r",
											"    pm.expect(responseData.address).to.have.property('country');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": [
								{
									"name": "account informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"plan\": [\n    {\n      \"type\": \"payAsYouGo\",\n      \"credits\": 5000,\n      \"creditsType\": \"sendLimit\"\n    },\n    {\n      \"type\": \"subscription\",\n      \"credits\": 39983,\n      \"creditsType\": \"sendLimit\",\n      \"startDate\": \"2017-03-11T00:00:00.000Z\",\n      \"endDate\": \"2017-04-11T00:00:00.000Z\"\n    },\n    {\n      \"type\": \"sms\",\n      \"credits\": 999.5360000000001,\n      \"creditsType\": \"sendLimit\"\n    }\n  ],\n  \"relay\": {\n    \"enabled\": true,\n    \"data\": {\n      \"userName\": \"john.smith@example.com\",\n      \"relay\": \"smtp-relay.domain.com\",\n      \"port\": 587\n    }\n  },\n  \"marketingAutomation\": {\n    \"key\": \"kzfr5xxxxxxttuyo1\",\n    \"enabled\": true\n  },\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyShop\",\n  \"address\": {\n    \"city\": \"New-York\",\n    \"street\": \"1677B 8th Avenue\",\n    \"zipCode\": \"7665\",\n    \"country\": \"USA\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Senders",
					"item": [
						{
							"name": "Get the list of all your senders",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									],
									"query": [
										{
											"key": "ip",
											"value": "veniam elit in",
											"description": "Filter your senders for a specific ip. **Available for dedicated IP usage only**\n"
										},
										{
											"key": "domain",
											"value": "veniam elit in",
											"description": "Filter your senders for a specific domain"
										}
									]
								}
							},
							"response": [
								{
									"name": "list of senders",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"senders\": [\n    {\n      \"id\": 1,\n      \"name\": \"Marketing\",\n      \"email\": \"marketing@mycompany.com\",\n      \"active\": true,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 100\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Newsletter\",\n      \"email\": \"newsletter@mycompany.com\",\n      \"active\": false,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 50\n        },\n        {\n          \"ip\": \"123.98.643.2\",\n          \"domain\": \"news.mycompany.com\",\n          \"weight\": 50\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sender",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									]
								}
							},
							"response": [
								{
									"name": "sender created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5,\n  \"spfError\": true,\n  \"dkimError\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for your account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										"ips"
									]
								}
							},
							"response": [
								{
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												"ips"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"67.145.89.3\",\n      \"active\": true,\n      \"domain\": \"mailing.myshop.com\"\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"76.76.125.9\",\n      \"active\": true,\n      \"domain\": \"newsletter.myshop.com\"\n    },\n    {\n      \"id\": 6,\n      \"ip\": \"123.65.8.22\",\n      \"active\": false,\n      \"domain\": \"notifications.myshop.com\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a sender",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "13396752",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"name": "sender updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sender",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "13396752",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"name": "sender deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for a sender",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId",
										"ips"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "13396752",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"123.65.8.22\",\n      \"domain\": \"mailing.myshop.dom\",\n      \"weight\": 40\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"123.43.21.3\",\n      \"domain\": \"newsletter.myshop.dom\",\n      \"weight\": 60\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "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",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.sendinblue.com/v3",
			"type": "string"
		},
		{
			"key": "api-key",
			"value": "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",
			"type": "string"
		}
	]
}